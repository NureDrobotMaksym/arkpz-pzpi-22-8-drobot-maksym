Міністерство освіти і науки України
Харківський національний університет радіоелектроніки




Кафедра програмної інженерії




Звіт з лабораторної роботи №5
з дисципліни «Аналіз та рефакторинг коду»




Виконав:
ст. гр. ПЗПІ-22-8
Дробот Максим Євгенович

Перевірив:
ст. викл. каф. ПІ
Сокорчук Ігор Петрович 





Харків 2025
5 РОЗГОРТАННЯ ПРОГРАМНОЇ СИСТЕМИ ТА ДЕМОНСТРАЦІЯ ЇЇ РОБОТИ


	5.1 Мета роботи
	На лабораторній роботі №5 потрібно розгорнути програмну систему та продемонструвати її роботу.	
	5.2 Хід роботи
	У ході виконання  було розгорнуто програмну систему, що використовує RFID ідентифікатор для визначення особистості та прав доступу. Система була успішно інтегрована з MQTT-брокером, забезпечуючи передачу зібраних даних на сервер для подальшої обробки та зберігання.
     Датчики коректно вимірюють ідентифікатор, результати вимірювань формуються у форматі JSON та публікуються в MQTT-топік. На сервері дані успішно приймаються, що підтверджує стабільну роботу програмної системи.
     5.3 Вимоги середовища та компоненти:
     Мікроконтролер ESP32 із прошивкою для роботи з датчиками та MQTT. Датчики RFID для ідентифікації.
     Програмні бібліотеки:
     • Arduino IDE з бібліотеками для роботи з MQTT (PubSubClient) та датчиками.
     • Сервер MQTT (наприклад, Mosquitto) для обробки повідомлень.
     Серверна інфраструктура:
     • Сервер для розгортання MQTT-брокера та бази даних.
     • PostgreSQL або інша СУБД для зберігання даних.
     Мережа: Wi-Fi для підключення IoT-клієнта до брокера.
     Користувацьке середовище: Пристрій із веб-браузером або додатком для перегляду отриманих даних.
     База даних: PostgreSQL.
     Інструменти та технології:
     1. Апаратна частина:
     ESP32 для керування датчиками і передачі даних через Wi-Fi.
     Датчики ідентифікації RFID.
     2. Програмні інструменти та середовища:
     Visual Studio Code для роботи із серверною частиною та документування проекту.
     3. Програмні бібліотеки:
     PubSubClient для інтеграції ESP32 з MQTT-брокером.
     RFID для роботи з датчиками RFID.
     4. Протоколи і мережі:
     Wi-Fi для з’єднання ESP32 з мережею.
     MQTT для обміну даними між IoT-клієнтом і сервером.
     5. Серверна частина:
     Mosquitto (MQTT-брокер) для обробки і пересилки даних між клієнтом і сервером.
     PostgreSQL для зберігання вимірювань від датчиків.
     Node.js для розробки серверної логіки.
     6. Інструменти тестування і налагодження:
     Serial Monitor в Arduino IDE для перевірки роботи ESP32 і відладки коду.
     MQTT Explorer для перевірки публікацій повідомлень у топіки.
     Postman та Swagger для тестування API.
     7. Формат даних:
     JSON використовувався для передачі вимірювань від датчиків до сервера.
     Висновки
     У процесі виконання проекту була успішно розроблена та розгорнута IoT-система для моніторингу та контролю доступу на підприємствах. Система забезпечує збирання даних за допомогою RFID датчиків, обробку цих даних на ESP32 та передачу їх на сервер через MQTT-протокол. Зібрані дані зберігаються в базі даних для подальшого аналізу або використання в реальних сценаріях.
	Відеозапис захисту даної лабораторної роботи можна побачити за наступним посиланням: https://youtu.be/d3O6xQpKWVc

